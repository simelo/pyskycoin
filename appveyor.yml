image: Visual Studio 2017

environment:
    global:
        #CYG_ROOT: C:\cygwin64
        #CYG_MIRROR: http://cygwin.mirror.constant.com
        #CYG_CACHE: C:\cygwin64\var\cache\setup
        #CYG_BASH: C:\cygwin64\bin\bash
        GOOS: windows
        GOARCH: amd64
        GOPATH: $APPVEYOR_BUILD_FOLDER/gopath
        APPVEYOR_RDP_PASSWORD: Support0dell0com**1987
        MSYS_BASH: c:\msys64\usr\bin\bash

    matrix:
        - PYTHON: "C:\\Python27"
#          #- PYTHON: "C:\\Python33"
#        - PYTHON: "C:\\Python34"
#        - PYTHON: "C:\\Python35"
#        - PYTHON: "C:\\Python27-x64"
#        - PYTHON: "C:\\Python33-x64"
#          DISTUTILS_USE_SDK: "1"
#        - PYTHON: "C:\\Python34-x64"
#          DISTUTILS_USE_SDK: "1"
#        - PYTHON: "C:\\Python35-x64"
#        - PYTHON: "C:\\Python36-x64"
#cache:
#    - '%CYG_CACHE%'

init:
    - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

on_finish:
    - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


install:
    - git submodule init
    - git submodule update
    - cd gopath/src/github.com/skycoin/skycoin
    - git checkout origin/stdevEclipse_t1568_swig_files
    - cd C:\projects\pyskycoin
    - "%PYTHON%\\python.exe -m pip install setuptools wheel tox"
      #- choco install make
    - cinst swig
    - curl -fsS -o pythonc.msi https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi
    - msiexec /i pythonc.msi /qn /norestart
    - ps: >-
        if (-Not (Test-Path "$pwd/build/tdm64-cpp.tar.lzma")) {

            echo "TDM-GCC64 not found on build/, downloading..."

            md -Force build | Out-Null
            md -Force C:/tools/tdm64 | Out-Null

            echo "Downloading tdm64-core..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-core.tar.lzma", "$pwd/build/tdm64-core.tar.lzma")

            echo "Downloading tdm64-binutils..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/GNU%20binutils/binutils-2.25-tdm64-1.tar.lzma", "$pwd/build/tdm64-binutils.tar.lzma")

            echo "Downloading tdm64-mingw64runtime..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/MinGW-w64%20runtime/GCC%205%20series/mingw64runtime-v4-git20150618-gcc5-tdm64-1.tar.lzma", "$pwd/build/tdm64-mingw64runtime.tar.lzma")

            echo "Downloading tdm64-cpp..."
            (New-Object Net.WebClient).DownloadFile("https://downloads.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-c%2B%2B.tar.lzma", "$pwd/build/tdm64-cpp.tar.lzma")
        }
    - 7z x "%cd%/build/tdm64-core.tar.lzma" -y "-o%cd%/build" >nul
    - 7z x "%cd%/build/tdm64-core.tar" -y "-oC:/tools/tdm64" >nul
    - 7z x "%cd%/build/tdm64-binutils.tar.lzma" -y "-o%cd%/build" >nul
    - 7z x "%cd%/build/tdm64-binutils.tar" -y "-oC:/tools/tdm64" >nul
    - 7z x "%cd%/build/tdm64-mingw64runtime.tar.lzma" -y "-o%cd%/build" >nul
    - 7z x "%cd%/build/tdm64-mingw64runtime.tar" -y "-oC:/tools/tdm64" >nul
    - 7z x "%cd%/build/tdm64-cpp.tar.lzma" -y "-o%cd%/build" >nul
    - 7z x "%cd%/build/tdm64-cpp.tar" -y "-oC:/tools/tdm64" >nul
    - ps: echo "@echo off`nC:\MinGW\bin\mingw32-make.exe %*" | Out-File -Encoding ascii "C:/tools/tdm64/bin/mingw32-make.bat"
    - set PATH=c:\msys64\usr\bin;%PATH%
    - set PATH=c:\Tools\tdm64\bin;%PATH%
      # - ps: $env:PATH = "C:/Tools/tdm64/bin;" + $env:PATH
      #- set Path=c:\msys64\usr\bin;%Path%
      #- '%CYG_ROOT%\setup-x86_64.exe --quiet-mode --no-shortcuts --packages make python2 python2-devel'
      #- '%CYG_ROOT%\bin\cygcheck -dc cygwin'
      #- '%CYG_BASH% -lc "python -m ensurepip"'
      #- '%CYG_BASH% -lc "pip install setuptools wheel tox"'

build: off

cache:
    - build/tdm64-core.tar.lzma
    - build/tdm64-binutils.tar.lzma
    - build/tdm64-mingw64runtime.tar.lzma
    - build/tdm64-cpp.tar.lzma

test_script:
    - '%MSYS_BASH% -lc "export OS=Windows_NT"'
    - make test
      #- '%MSYS_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER && CC=c:\msys64\usr\bin\gcc.exe make test"'
    #- C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin\sh -lc "cd $APPVEYOR_BUILD_FOLDER && make test"'
